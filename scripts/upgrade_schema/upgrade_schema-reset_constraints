--
-- autoqc results - enable storage of results for multi-component
-- compositions, create views for ease of querying
--

SELECT '==table adapter';

ALTER TABLE adapter
  MODIFY COLUMN id_seq_composition BIGINT(20) UNSIGNED NOT NULL COMMENT
    'A foreign key referencing the id_seq_composition column of the seq_composition table',
  ADD UNIQUE INDEX adapter_compos_ind_unique (id_seq_composition),
  DROP INDEX adapter_compos_ind,
  DROP INDEX unq_run_lane_adapter,
  MODIFY COLUMN id_run bigint(20) unsigned DEFAULT NULL,
  MODIFY COLUMN position tinyint(1) unsigned DEFAULT NULL,
  MODIFY COLUMN tag_index bigint(20) DEFAULT NULL;
SHOW ERRORS;
SHOW WARNINGS;
SELECT 'adapter', @@warning_count, @@error_count;

OPTIMIZE TABLE adapter;

CREATE VIEW npgqcp.v_adapter AS
  SELECT comp.id_run    AS c_id_run,
         comp.position  AS c_position,
         comp.tag_index AS c_tag_index,
         comp.subset    AS c_subset,
         comp.digest    AS component_digest,
         sc.digest      AS composition_digest,
         sc.size        AS composition_size,
         a.*
  FROM npgqcp.adapter a,
       npgqcp.seq_composition sc,
       npgqcp.seq_component_composition scc,
       npgqcp.seq_component comp
  WHERE    a.id_seq_composition  = sc.id_seq_composition
    AND   sc.id_seq_composition  = scc.id_seq_composition
    AND comp.id_seq_component    = scc.id_seq_component;
SHOW ERRORS;
SHOW WARNINGS;
SELECT 'adapter', @@warning_count, @@error_count;

SELECT '==done table adapter';

SELECT '==table alignment_filter_metrics';

ALTER TABLE alignment_filter_metrics
  MODIFY COLUMN id_seq_composition BIGINT(20) UNSIGNED NOT NULL COMMENT
    'A foreign key referencing the id_seq_composition column of the seq_composition table',
  ADD UNIQUE INDEX alignment_filter_metrics_compos_ind_unique (id_seq_composition),
  DROP INDEX alignment_filter_metrics_compos_ind,
  DROP INDEX unq_run_lane_afmetrics,
  MODIFY COLUMN id_run bigint(20) unsigned DEFAULT NULL,
  MODIFY COLUMN position tinyint(1) unsigned DEFAULT NULL,
  MODIFY COLUMN tag_index bigint(20) DEFAULT NULL;
SHOW ERRORS;
SHOW WARNINGS;
SELECT 'alignment_filter_metrics', @@warning_count, @@error_count;

OPTIMIZE TABLE alignment_filter_metrics;

CREATE VIEW npgqcp.v_alignment_filter_metrics AS
  SELECT comp.id_run    AS c_id_run,
         comp.position  AS c_position,
         comp.tag_index AS c_tag_index,
         comp.subset    AS subset,
         comp.digest    AS component_digest,
         sc.digest      AS composition_digest,
         sc.size        AS composition_size,
         a.*
  FROM npgqcp.alignment_filter_metrics a,
       npgqcp.seq_composition sc,
       npgqcp.seq_component_composition scc,
       npgqcp.seq_component comp
  WHERE    a.id_seq_composition  = sc.id_seq_composition
    AND   sc.id_seq_composition  = scc.id_seq_composition
    AND comp.id_seq_component    = scc.id_seq_component;
SHOW ERRORS;
SHOW WARNINGS;
SELECT 'alignment_filter_metrics', @@warning_count, @@error_count;

SELECT '==done table alignment_filter_metrics';

SELECT '==table bam_flagstats';

ALTER TABLE bam_flagstats
  MODIFY COLUMN id_seq_composition BIGINT(20) UNSIGNED NOT NULL COMMENT
    'A foreign key referencing the id_seq_composition column of the seq_composition table',
  ADD UNIQUE INDEX bam_flagstats_compos_ind_unique (id_seq_composition),
  DROP INDEX bam_flagstats_compos_ind,
  DROP INDEX unq_run_lane_index_sp_flag,
  MODIFY COLUMN id_run bigint(20) unsigned DEFAULT NULL,
  MODIFY COLUMN position tinyint(1) unsigned DEFAULT NULL,
  MODIFY COLUMN tag_index bigint(20) DEFAULT NULL,
  MODIFY COLUMN subset varchar(10) DEFAULT NULL,
  MODIFY COLUMN human_split varchar(10) DEFAULT NULL;
SHOW ERRORS;
SHOW WARNINGS;
SELECT 'bam_flagstats', @@warning_count, @@error_count;

OPTIMIZE TABLE bam_flagstats;

CREATE VIEW npgqcp.v_bam_flagstats AS
  SELECT comp.id_run    AS c_id_run,
         comp.position  AS c_position,
         comp.tag_index AS c_tag_index,
         comp.subset    AS c_subset,
         comp.digest    AS component_digest,
         sc.digest      AS composition_digest,
         sc.size        AS composition_size,
         a.*
  FROM npgqcp.bam_flagstats a,
       npgqcp.seq_composition sc,
       npgqcp.seq_component_composition scc,
       npgqcp.seq_component comp
  WHERE    a.id_seq_composition  = sc.id_seq_composition
    AND   sc.id_seq_composition  = scc.id_seq_composition
    AND comp.id_seq_component    = scc.id_seq_component;
SHOW ERRORS;
SHOW WARNINGS;
SELECT 'bam_flagstats', @@warning_count, @@error_count;

SELECT '==done table bam_flagstats';

SHOW FULL TABLES IN npgqcp WHERE TABLE_TYPE LIKE 'VIEW';